<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.net http://www.springframework.net/schema/objects/spring-objects-1.1.xsd"
         xmlns:redis="http://www.springframework.net/schema/redis"
         default-lazy-init="false">

  <description>
    This xml file is used for testing a fully wired up Spring xml config for RedisMessaging service
  </description>

  <redis:sentinel id="sentinel" connection="strongConnection" messageTimeout="60" interval="1000" />

  <redis:container id="myContainer" 
                   connection="strongConnection" 
                   enableSentinel="true" 
                   sentinel="sentinel">

    <redis:channels>
      <redis:channel id="myChannel"
                     concurrency="5"
                     defaultErrorHandler="myErrorHandler">

        <redis:listeners>
          <redis:listener handlerType="RedisMessaging.Tests.ConsumerTests.TestMessageHandler, RedisMessaging.Tests" handlerMethod="HandleMessage" typeKey="Basic" />
        </redis:listeners>

        <redis:queues>
          <redis:messageQueue name="myMsgQ" />
          <redis:deadLetterQueue name="myDeadLetterQ" />
          <redis:poisonQueue name="myPoisonQ" />
        </redis:queues>

        <redis:messageConverter createMessageIds="true">
          <redis:typeMapper>
            <redis:knownType key="Basic" type="RedisMessaging.BasicMessage, RedisMessaging" />
            <redis:knownType key="Event" type="Consumer.Event, Consumer" />
          </redis:typeMapper>
        </redis:messageConverter>

        <redis:adviceChain>
          <redis:advice retryOnFail="true" exceptionType="TimeoutException" adviceType="TimedRetry" retryCount="8" retryInterval="30" />
          <redis:advice id="advice2" retryOnFail="true" exceptionType="System.Data.SqlClient.SqlException" adviceType="RetryRequeue" />
        </redis:adviceChain>

      </redis:channel>
    </redis:channels>
    
  </redis:container>

  <object id="myErrorHandler" type="RedisMessaging.Errors.DeadLetterErrorHandler, RedisMessaging" />

</objects>