<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.net http://www.springframework.net/schema/objects/spring-objects-1.1.xsd"
         xmlns:redis="http://www.springframework.net/schema/redis"
         default-lazy-init="false">

  <description>
    This xml file is used for testing a fully wired up Spring xml config for RedisMessaging service
  </description>

  <redis:connection id="strongConnection"
                    endpoints="localhost:6379"
                    defaultDatabase="2"
                    abortConnect="true"
                    allowAdmin="true"
                    connectRetry="5" />

  <redis:sentinel id="sentinel" connection="strongConnection" messageTimeout="10" interval="100" />

  <redis:container id="myContainer"
                   connection="strongConnection"
                   enableSentinel="true"
                   sentinel="sentinel">

    <redis:channels>
      <redis:channel id="myChannel" concurrency="5" messageQueue="myQueue">

        <redis:listeners>
          <redis:listener id="myListener" handlerType="RedisMessaging.Tests.ConsumerTests.TestMessageHandler, RedisMessaging.Tests" handlerMethod="HandleMessage" typeKey="Basic" />
        </redis:listeners>

        <redis:queues>
          <redis:deadLetterQueue name="myDeadLetterQ" />
          <redis:poisonQueue name="myPoisonQ" />
        </redis:queues>

        <redis:messageConverter createMessageIds="true">
          <redis:typeMapper>
            <redis:knownType key="Basic" type="RedisMessaging.BasicMessage, RedisMessaging" />
            <redis:knownType key="Event" type="Consumer.Event, Consumer" />
          </redis:typeMapper>
        </redis:messageConverter>

        <redis:adviceChain>
          <redis:advice retryOnFail="true" exceptionType="TimeoutException" adviceType="RetryRequeue" />
          <redis:advice id="advice2" retryOnFail="true" exceptionType="ApplicationException" adviceType="TimedRetry" retryCount="1" retryInterval="5" />
        </redis:adviceChain>

      </redis:channel>
    </redis:channels>

  </redis:container>

  <redis:queue id="myQueue" name="myRedisQ" />
  <redis:queue id="myDeadLetterQ" name="myDeadLetterQ" />
  <redis:queue id="myPoisonQ" name="myPoisonQ" />

  <redis:producer id="myProducer" connection="strongConnection" queue="myQueue" />

</objects>