<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
</objects>
<!--<objects xmlns="http://www.springframework.net"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <rabbit:connection-factory id="defaultConnFactory" host="localhost" username="admin" password="admin" channel-cache-size="10" />

  <rabbit:template id="rabbitTemplate" connection-factory="defaultConnFactory" routing-key="*.*.*" message-converter="JsonMessageConverter" />

  <rabbit:listener-container id="AbstractMessageListenerContainer"
                             connection-factory="defaultConnFactory"
                             concurrency="5"
                             message-converter="JsonMessageConverter"
                             prefetch="10"
                             requeue-rejected="false"
                             error-handler="FlightFeedErrorHandler"
                             acknowledge="auto">

    <rabbit:listener id="listener" queues="flightQueue" ref="FlightFeedMessageHandler" method="HandleMessage" />

  </rabbit:listener-container>

  <rabbit:admin id="RabbitAdmin" connection-factory="defaultConnFactory" auto-startup="true" />

  <rabbit:topic-exchange id="flightExchange" name="ex.ss.sfstosasFlights" xmlns="http://www.springframework.net/schema/rabbit">
    <bindings>
      <binding queue="flightQueue" pattern="*.*.*" />
    </bindings>
  </rabbit:topic-exchange>
  <rabbit:queue id="flightQueue" name="q.ss.sfstosasFlights">
    <rabbit:queue-arguments>
      <entry key="x-message-ttl">
        <value type="System.Int64">86400000</value>
      </entry>
      <entry key="x-dead-letter-exchange" value="dlx.ex.ss.sfstosasFlights" />
    </rabbit:queue-arguments>
  </rabbit:queue>

  <rabbit:topic-exchange id="deadLetterFlightExchange" name="dlx.ex.ss.sfstosasFlights" xmlns="http://www.springframework.net/schema/rabbit">
    <bindings>
      <binding queue="deadLetterFlightQueue" pattern="#" />
    </bindings>
  </rabbit:topic-exchange>
  <rabbit:queue id="deadLetterFlightQueue" name="dlx.q.ss.sfstosasFlights" />

  
  
  <object id ="RedisContainer" type ="RedisMessaging.Consumer.RedisContainer, RedisMessaging.Consumer">
    <property name ="Connection" ref ="RedisConnection"/>
    <property name ="Channel" ref ="RedisChannel"/>
  </object>

  <object id ="RedisConnection" type ="Masque.Redis.ConnectionBase.RedisConnection, Masque.Redis.ConnectionBase">
    <property name ="Server" ref ="RedisServer"/>
  </object>

  <object id ="RedisServer" type ="RedisMessaging.ConnectionBase.RedisServer, RedisMessaging.ConnectionBase">
    <property name ="Endpoint" ref="RedisConnection"/>
  </object>

  <object id ="RedisChannel" type ="RedisMessaging.Consumer.RedisChannel, RedisMessaging.Consumer">
    
  </object>
  
  <object id="JsonMessageConverter" type="Spring.Messaging.Amqp.Support.Converter.JsonMessageConverter, Spring.Messaging.Amqp">
    <property name="CreateMessageIds" value="true" />
    <property name="TypeMapper" ref="TypeMapper"/>
  </object>

  <object id="TypeMapper" type="Spring.Messaging.Amqp.Support.Converter.DefaultTypeMapper, Spring.Messaging.Amqp">
    <property name="IdTypeMapping">
      <dictionary key-type="System.String" value-type="System.Object">
        <entry key="FlightSegmentDTO" value="Springshot.SAS.Domain.ValueObjects.FlightFeed.FlightSegmentDTO, Springshot.SAS.Domain" />
        <entry key="FlightSegmentPairDTO" value="Springshot.SAS.Domain.ValueObjects.FlightFeed.FlightSegmentPairDTO, Springshot.SAS.Domain" />
      </dictionary>
    </property>
  </object>

  <object id="FlightFeedMessageHandler" type="Springshot.SAS.FlightFeedService.Messaging.Handlers.FlightFeedMessageHandler, Springshot.SAS.FlightFeedService">
    <constructor-arg name="flightFeedApplicationService" ref="IFlightFeedApplicationService" />
  </object>

  <object id="FlightFeedErrorHandler" type="Springshot.SAS.FlightFeedService.Messaging.Handlers.MessageListenerErrorHandler, Springshot.SAS.FlightFeedService" />
</objects>-->
